{
	"info": {
		"_postman_id": "5836fa68-bc78-4e3f-9456-1f2311d96570",
		"name": "Dropwizard Demo",
		"description": "This collection consists of all the APIs from the Demo application of Dropwizard.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18633168"
	},
	"item": [
		{
			"name": "Admin",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/healthcheck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"healthcheck"
							]
						},
						"description": "### Health Check\n\nThis endpoint sends an HTTP GET request to `http://localhost:8081/healthcheck` to check the health status of the system.\n\n**Request Body**  \nThis request does not require a request body.\n\n**Response Body**  \nThe response returns the health status of different components of the system including deadlocks and hibernate. The response includes the status of each component, the duration, and the timestamp of the health check.\n\nExample response:\n\n``` json\n{\n    \"deadlocks\": {\n        \"healthy\": true,\n        \"duration\": 0,\n        \"timestamp\": \"\"\n    },\n    \"hibernate\": {\n        \"healthy\": true,\n        \"duration\": 0,\n        \"timestamp\": \"\"\n    }\n}\n\n ```"
					},
					"response": [
						{
							"name": "Sample Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/healthcheck",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"healthcheck"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 29 Jun 2024 11:58:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Cache-Control",
									"value": "must-revalidate,no-cache,no-store"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Length",
									"value": "173"
								}
							],
							"cookie": [],
							"body": "{\n    \"deadlocks\": {\n        \"healthy\": true,\n        \"duration\": 0,\n        \"timestamp\": \"2024-06-29T17:28:05.835+05:30\"\n    },\n    \"hibernate\": {\n        \"healthy\": true,\n        \"duration\": 4,\n        \"timestamp\": \"2024-06-29T17:28:05.831+05:30\"\n    }\n}"
						}
					]
				},
				{
					"name": "Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/metrics",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"metrics"
							]
						},
						"description": "\n### Get Metrics\n\nThis endpoint is used to retrieve the metrics data.\n\n#### Request Body\nThis endpoint does not require a request body.\n\n#### Response\nThe response will contain the metrics data in JSON format.\n"
					},
					"response": [
						{
							"name": "Sample Metrics",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/metrics",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"metrics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 29 Jun 2024 12:27:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Cache-Control",
									"value": "must-revalidate,no-cache,no-store"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"version\": \"4.0.0\",\n    \"gauges\": {\n        \"io.dropwizard.db.ManagedPooledDataSource.hibernate.active\": {\n            \"value\": 0\n        },\n        \"io.dropwizard.db.ManagedPooledDataSource.hibernate.borrowed\": {\n            \"value\": 2\n        },\n        \"io.dropwizard.db.ManagedPooledDataSource.hibernate.created\": {\n            \"value\": 10\n        },\n        \"io.dropwizard.db.ManagedPooledDataSource.hibernate.idle\": {\n            \"value\": 8\n        },\n        \"io.dropwizard.db.ManagedPooledDataSource.hibernate.reconnected\": {\n            \"value\": 0\n        },\n        \"io.dropwizard.db.ManagedPooledDataSource.hibernate.released\": {\n            \"value\": 2\n        },\n        \"io.dropwizard.db.ManagedPooledDataSource.hibernate.releasedIdle\": {\n            \"value\": 2\n        },\n        \"io.dropwizard.db.ManagedPooledDataSource.hibernate.removeAbandoned\": {\n            \"value\": 0\n        },\n        \"io.dropwizard.db.ManagedPooledDataSource.hibernate.returned\": {\n            \"value\": 12\n        },\n        \"io.dropwizard.db.ManagedPooledDataSource.hibernate.size\": {\n            \"value\": 8\n        },\n        \"io.dropwizard.db.ManagedPooledDataSource.hibernate.waiting\": {\n            \"value\": 0\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.percent-4xx-15m\": {\n            \"value\": 0\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.percent-4xx-1m\": {\n            \"value\": 0\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.percent-4xx-5m\": {\n            \"value\": 0\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.percent-5xx-15m\": {\n            \"value\": 0\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.percent-5xx-1m\": {\n            \"value\": 0\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.percent-5xx-5m\": {\n            \"value\": 0\n        },\n        \"jvm.attribute.name\": {\n            \"value\": \"36954@US-GPD7MFK6HY\"\n        },\n        \"jvm.attribute.uptime\": {\n            \"value\": 124868\n        },\n        \"jvm.attribute.vendor\": {\n            \"value\": \"Amazon.com Inc. OpenJDK 64-Bit Server VM 21.0.3+9-LTS (21)\"\n        },\n        \"jvm.buffers.direct.capacity\": {\n            \"value\": 155653\n        },\n        \"jvm.buffers.direct.count\": {\n            \"value\": 11\n        },\n        \"jvm.buffers.direct.used\": {\n            \"value\": 155653\n        },\n        \"jvm.buffers.mapped.capacity\": {\n            \"value\": 0\n        },\n        \"jvm.buffers.mapped.count\": {\n            \"value\": 0\n        },\n        \"jvm.buffers.mapped.used\": {\n            \"value\": 0\n        },\n        \"jvm.classloader.loaded\": {\n            \"value\": 14449\n        },\n        \"jvm.classloader.unloaded\": {\n            \"value\": 0\n        },\n        \"jvm.filedescriptor\": {\n            \"value\": 0.01640625\n        },\n        \"jvm.gc.G1-Concurrent-GC.count\": {\n            \"value\": 6\n        },\n        \"jvm.gc.G1-Concurrent-GC.time\": {\n            \"value\": 6\n        },\n        \"jvm.gc.G1-Old-Generation.count\": {\n            \"value\": 0\n        },\n        \"jvm.gc.G1-Old-Generation.time\": {\n            \"value\": 0\n        },\n        \"jvm.gc.G1-Young-Generation.count\": {\n            \"value\": 9\n        },\n        \"jvm.gc.G1-Young-Generation.time\": {\n            \"value\": 38\n        },\n        \"jvm.memory.heap.committed\": {\n            \"value\": 98566144\n        },\n        \"jvm.memory.heap.init\": {\n            \"value\": 268435456\n        },\n        \"jvm.memory.heap.max\": {\n            \"value\": 4294967296\n        },\n        \"jvm.memory.heap.usage\": {\n            \"value\": 0.014752700924873352\n        },\n        \"jvm.memory.heap.used\": {\n            \"value\": 63362368\n        },\n        \"jvm.memory.non-heap.committed\": {\n            \"value\": 98631680\n        },\n        \"jvm.memory.non-heap.init\": {\n            \"value\": 7667712\n        },\n        \"jvm.memory.non-heap.max\": {\n            \"value\": -1\n        },\n        \"jvm.memory.non-heap.usage\": {\n            \"value\": 0.9829893194559801\n        },\n        \"jvm.memory.non-heap.used\": {\n            \"value\": 96977920\n        },\n        \"jvm.memory.pools.CodeHeap-'non-nmethods'.committed\": {\n            \"value\": 2555904\n        },\n        \"jvm.memory.pools.CodeHeap-'non-nmethods'.init\": {\n            \"value\": 2555904\n        },\n        \"jvm.memory.pools.CodeHeap-'non-nmethods'.max\": {\n            \"value\": 5849088\n        },\n        \"jvm.memory.pools.CodeHeap-'non-nmethods'.usage\": {\n            \"value\": 0.2889311974789916\n        },\n        \"jvm.memory.pools.CodeHeap-'non-nmethods'.used\": {\n            \"value\": 1662208\n        },\n        \"jvm.memory.pools.CodeHeap-'non-profiled-nmethods'.committed\": {\n            \"value\": 3538944\n        },\n        \"jvm.memory.pools.CodeHeap-'non-profiled-nmethods'.init\": {\n            \"value\": 2555904\n        },\n        \"jvm.memory.pools.CodeHeap-'non-profiled-nmethods'.max\": {\n            \"value\": 122912768\n        },\n        \"jvm.memory.pools.CodeHeap-'non-profiled-nmethods'.usage\": {\n            \"value\": 0.0286715209277526\n        },\n        \"jvm.memory.pools.CodeHeap-'non-profiled-nmethods'.used\": {\n            \"value\": 3524096\n        },\n        \"jvm.memory.pools.CodeHeap-'profiled-nmethods'.committed\": {\n            \"value\": 11665408\n        },\n        \"jvm.memory.pools.CodeHeap-'profiled-nmethods'.init\": {\n            \"value\": 2555904\n        },\n        \"jvm.memory.pools.CodeHeap-'profiled-nmethods'.max\": {\n            \"value\": 122896384\n        },\n        \"jvm.memory.pools.CodeHeap-'profiled-nmethods'.usage\": {\n            \"value\": 0.09449781695773897\n        },\n        \"jvm.memory.pools.CodeHeap-'profiled-nmethods'.used\": {\n            \"value\": 11613440\n        },\n        \"jvm.memory.pools.Compressed-Class-Space.committed\": {\n            \"value\": 9830400\n        },\n        \"jvm.memory.pools.Compressed-Class-Space.init\": {\n            \"value\": 0\n        },\n        \"jvm.memory.pools.Compressed-Class-Space.max\": {\n            \"value\": 1073741824\n        },\n        \"jvm.memory.pools.Compressed-Class-Space.usage\": {\n            \"value\": 0.008959688246250153\n        },\n        \"jvm.memory.pools.Compressed-Class-Space.used\": {\n            \"value\": 9620392\n        },\n        \"jvm.memory.pools.G1-Eden-Space.committed\": {\n            \"value\": 52428800\n        },\n        \"jvm.memory.pools.G1-Eden-Space.init\": {\n            \"value\": 23068672\n        },\n        \"jvm.memory.pools.G1-Eden-Space.max\": {\n            \"value\": -1\n        },\n        \"jvm.memory.pools.G1-Eden-Space.usage\": {\n            \"value\": 0.72\n        },\n        \"jvm.memory.pools.G1-Eden-Space.used\": {\n            \"value\": 37748736\n        },\n        \"jvm.memory.pools.G1-Eden-Space.used-after-gc\": {\n            \"value\": 0\n        },\n        \"jvm.memory.pools.G1-Old-Gen.committed\": {\n            \"value\": 35651584\n        },\n        \"jvm.memory.pools.G1-Old-Gen.init\": {\n            \"value\": 245366784\n        },\n        \"jvm.memory.pools.G1-Old-Gen.max\": {\n            \"value\": 4294967296\n        },\n        \"jvm.memory.pools.G1-Old-Gen.usage\": {\n            \"value\": 0.003522232174873352\n        },\n        \"jvm.memory.pools.G1-Old-Gen.used\": {\n            \"value\": 15127872\n        },\n        \"jvm.memory.pools.G1-Old-Gen.used-after-gc\": {\n            \"value\": 15127872\n        },\n        \"jvm.memory.pools.G1-Survivor-Space.committed\": {\n            \"value\": 10485760\n        },\n        \"jvm.memory.pools.G1-Survivor-Space.init\": {\n            \"value\": 0\n        },\n        \"jvm.memory.pools.G1-Survivor-Space.max\": {\n            \"value\": -1\n        },\n        \"jvm.memory.pools.G1-Survivor-Space.usage\": {\n            \"value\": 1\n        },\n        \"jvm.memory.pools.G1-Survivor-Space.used\": {\n            \"value\": 10485760\n        },\n        \"jvm.memory.pools.G1-Survivor-Space.used-after-gc\": {\n            \"value\": 10485760\n        },\n        \"jvm.memory.pools.Metaspace.committed\": {\n            \"value\": 71041024\n        },\n        \"jvm.memory.pools.Metaspace.init\": {\n            \"value\": 0\n        },\n        \"jvm.memory.pools.Metaspace.max\": {\n            \"value\": -1\n        },\n        \"jvm.memory.pools.Metaspace.usage\": {\n            \"value\": 0.9934428873097325\n        },\n        \"jvm.memory.pools.Metaspace.used\": {\n            \"value\": 70575200\n        },\n        \"jvm.memory.total.committed\": {\n            \"value\": 197197824\n        },\n        \"jvm.memory.total.init\": {\n            \"value\": 276103168\n        },\n        \"jvm.memory.total.max\": {\n            \"value\": -1\n        },\n        \"jvm.memory.total.used\": {\n            \"value\": 160358088\n        },\n        \"jvm.threads.blocked.count\": {\n            \"value\": 0\n        },\n        \"jvm.threads.count\": {\n            \"value\": 32\n        },\n        \"jvm.threads.daemon.count\": {\n            \"value\": 9\n        },\n        \"jvm.threads.deadlock.count\": {\n            \"value\": 0\n        },\n        \"jvm.threads.deadlocks\": {\n            \"value\": []\n        },\n        \"jvm.threads.new.count\": {\n            \"value\": 0\n        },\n        \"jvm.threads.peak.count\": {\n            \"value\": 32\n        },\n        \"jvm.threads.runnable.count\": {\n            \"value\": 15\n        },\n        \"jvm.threads.terminated.count\": {\n            \"value\": 0\n        },\n        \"jvm.threads.timed_waiting.count\": {\n            \"value\": 12\n        },\n        \"jvm.threads.total_started.count\": {\n            \"value\": 35\n        },\n        \"jvm.threads.waiting.count\": {\n            \"value\": 5\n        },\n        \"org.apache.hc.client5.http.io.HttpClientConnectionManager.true-application.available-connections\": {\n            \"value\": 0\n        },\n        \"org.apache.hc.client5.http.io.HttpClientConnectionManager.true-application.leased-connections\": {\n            \"value\": 0\n        },\n        \"org.apache.hc.client5.http.io.HttpClientConnectionManager.true-application.max-connections\": {\n            \"value\": 1024\n        },\n        \"org.apache.hc.client5.http.io.HttpClientConnectionManager.true-application.pending-connections\": {\n            \"value\": 0\n        },\n        \"org.eclipse.jetty.util.thread.QueuedThreadPool.dw-admin.jobs\": {\n            \"value\": 0\n        },\n        \"org.eclipse.jetty.util.thread.QueuedThreadPool.dw-admin.jobs-queue-utilization\": {\n            \"value\": 0\n        },\n        \"org.eclipse.jetty.util.thread.QueuedThreadPool.dw-admin.size\": {\n            \"value\": 9\n        },\n        \"org.eclipse.jetty.util.thread.QueuedThreadPool.dw-admin.utilization\": {\n            \"value\": 0.7777777777777778\n        },\n        \"org.eclipse.jetty.util.thread.QueuedThreadPool.dw-admin.utilization-max\": {\n            \"value\": 0.109375\n        },\n        \"org.eclipse.jetty.util.thread.QueuedThreadPool.dw.jobs\": {\n            \"value\": 0\n        },\n        \"org.eclipse.jetty.util.thread.QueuedThreadPool.dw.jobs-queue-utilization\": {\n            \"value\": 0\n        },\n        \"org.eclipse.jetty.util.thread.QueuedThreadPool.dw.size\": {\n            \"value\": 10\n        },\n        \"org.eclipse.jetty.util.thread.QueuedThreadPool.dw.utilization\": {\n            \"value\": 0.5\n        },\n        \"org.eclipse.jetty.util.thread.QueuedThreadPool.dw.utilization-max\": {\n            \"value\": 0.0048828125\n        }\n    },\n    \"counters\": {\n        \"TimeBoundHealthCheck-pool.running\": {\n            \"count\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthenticator.evictions-weight\": {\n            \"count\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthenticator.hits\": {\n            \"count\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthenticator.misses\": {\n            \"count\": 1\n        },\n        \"io.dropwizard.auth.CachingAuthorizer.evictions-weight\": {\n            \"count\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthorizer.hits\": {\n            \"count\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthorizer.misses\": {\n            \"count\": 1\n        },\n        \"io.dropwizard.jersey.errors.EofExceptionWriterInterceptor.eof-exceptions\": {\n            \"count\": 0\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.active-dispatches\": {\n            \"count\": 0\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.active-requests\": {\n            \"count\": 0\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.active-suspended\": {\n            \"count\": 0\n        },\n        \"jersey-client-true-application.running\": {\n            \"count\": 0\n        }\n    },\n    \"histograms\": {\n        \"io.dropwizard.auth.CachingAuthenticator.evictions\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthenticator.evictions.COLLECTED\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthenticator.evictions.EXPIRED\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthenticator.evictions.EXPLICIT\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthenticator.evictions.REPLACED\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthenticator.evictions.SIZE\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthorizer.evictions\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthorizer.evictions.COLLECTED\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthorizer.evictions.EXPIRED\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthorizer.evictions.EXPLICIT\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthorizer.evictions.REPLACED\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0\n        },\n        \"io.dropwizard.auth.CachingAuthorizer.evictions.SIZE\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0\n        }\n    },\n    \"meters\": {\n        \"TimeBoundHealthCheck-pool.created\": {\n            \"count\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"units\": \"events/second\"\n        },\n        \"TimeBoundHealthCheck-pool.terminated\": {\n            \"count\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"units\": \"events/second\"\n        },\n        \"ch.qos.logback.core.Appender.all\": {\n            \"count\": 22,\n            \"m15_rate\": 3.3471604381036575,\n            \"m1_rate\": 0.5680275717255824,\n            \"m5_rate\": 2.5971314640496677,\n            \"mean_rate\": 0.17790878249765074,\n            \"units\": \"events/second\"\n        },\n        \"ch.qos.logback.core.Appender.debug\": {\n            \"count\": 1,\n            \"m15_rate\": 0.0009915091652691948,\n            \"m1_rate\": 0.0030203318774233434,\n            \"m5_rate\": 0.0023686441710151626,\n            \"mean_rate\": 0.008086811588187443,\n            \"units\": \"events/second\"\n        },\n        \"ch.qos.logback.core.Appender.error\": {\n            \"count\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"units\": \"events/second\"\n        },\n        \"ch.qos.logback.core.Appender.info\": {\n            \"count\": 20,\n            \"m15_rate\": 3.3451774197731186,\n            \"m1_rate\": 0.5619869079707358,\n            \"m5_rate\": 2.592394175707638,\n            \"mean_rate\": 0.16173621792061435,\n            \"units\": \"events/second\"\n        },\n        \"ch.qos.logback.core.Appender.trace\": {\n            \"count\": 1,\n            \"m15_rate\": 0.0009915091652691948,\n            \"m1_rate\": 0.0030203318774233434,\n            \"m5_rate\": 0.0023686441710151626,\n            \"mean_rate\": 0.008086802002115074,\n            \"units\": \"events/second\"\n        },\n        \"ch.qos.logback.core.Appender.warn\": {\n            \"count\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"units\": \"events/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.1xx-responses\": {\n            \"count\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"units\": \"events/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.2xx-responses\": {\n            \"count\": 1,\n            \"m15_rate\": 0.0010194371798584528,\n            \"m1_rate\": 0.004581531748892666,\n            \"m5_rate\": 0.0025744889413512346,\n            \"mean_rate\": 0.008197799761667087,\n            \"units\": \"events/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.3xx-responses\": {\n            \"count\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"units\": \"events/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.4xx-responses\": {\n            \"count\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"units\": \"events/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.5xx-responses\": {\n            \"count\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"units\": \"events/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.async-dispatches\": {\n            \"count\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"units\": \"events/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.async-timeouts\": {\n            \"count\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"units\": \"events/second\"\n        },\n        \"jersey-client-true-application.created\": {\n            \"count\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"units\": \"events/second\"\n        },\n        \"jersey-client-true-application.terminated\": {\n            \"count\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"units\": \"events/second\"\n        },\n        \"org.asr.experiments.resources.filter.AuthenticationFilter.cache-misses\": {\n            \"count\": 1,\n            \"m15_rate\": 0.0009915091652691948,\n            \"m1_rate\": 0.0030203318774233434,\n            \"m5_rate\": 0.0023686441710151626,\n            \"mean_rate\": 0.008167090173862246,\n            \"units\": \"events/second\"\n        },\n        \"org.asr.experiments.resources.filter.AuthorizationFilter.cache-misses\": {\n            \"count\": 1,\n            \"m15_rate\": 0.0009915091652691948,\n            \"m1_rate\": 0.0030203318774233434,\n            \"m5_rate\": 0.0023686441710151626,\n            \"mean_rate\": 0.008168049671805956,\n            \"units\": \"events/second\"\n        }\n    },\n    \"timers\": {\n        \"io.dropwizard.auth.CachingAuthenticator.loads-failure\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.auth.CachingAuthenticator.loads-success\": {\n            \"count\": 1,\n            \"max\": 0.248438084,\n            \"mean\": 0.248438084,\n            \"min\": 0.248438084,\n            \"p50\": 0.248438084,\n            \"p75\": 0.248438084,\n            \"p95\": 0.248438084,\n            \"p98\": 0.248438084,\n            \"p99\": 0.248438084,\n            \"p999\": 0.248438084,\n            \"stddev\": 0,\n            \"m15_rate\": 0.0009915091652691948,\n            \"m1_rate\": 0.0030203318774233434,\n            \"m5_rate\": 0.0023686441710151626,\n            \"mean_rate\": 0.008167821958968601,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.auth.CachingAuthorizer.loads-failure\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.auth.CachingAuthorizer.loads-success\": {\n            \"count\": 1,\n            \"max\": 25.60635925,\n            \"mean\": 25.60635925,\n            \"min\": 25.60635925,\n            \"p50\": 25.60635925,\n            \"p75\": 25.60635925,\n            \"p95\": 25.60635925,\n            \"p98\": 25.60635925,\n            \"p99\": 25.60635925,\n            \"p999\": 25.60635925,\n            \"stddev\": 0,\n            \"m15_rate\": 0.0010194371798584528,\n            \"m1_rate\": 0.004581531748892666,\n            \"m5_rate\": 0.0025744889413512346,\n            \"mean_rate\": 0.008168037832284727,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.connect-requests\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.delete-requests\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.dispatches\": {\n            \"count\": 1,\n            \"max\": 27.284000000000002,\n            \"mean\": 27.284000000000002,\n            \"min\": 27.284000000000002,\n            \"p50\": 27.284000000000002,\n            \"p75\": 27.284000000000002,\n            \"p95\": 27.284000000000002,\n            \"p98\": 27.284000000000002,\n            \"p99\": 27.284000000000002,\n            \"p999\": 27.284000000000002,\n            \"stddev\": 0,\n            \"m15_rate\": 0.0010194371798584528,\n            \"m1_rate\": 0.004581531748892666,\n            \"m5_rate\": 0.0025744889413512346,\n            \"mean_rate\": 0.008197704361233616,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.get-requests\": {\n            \"count\": 1,\n            \"max\": 27.284000000000002,\n            \"mean\": 27.284000000000002,\n            \"min\": 27.284000000000002,\n            \"p50\": 27.284000000000002,\n            \"p75\": 27.284000000000002,\n            \"p95\": 27.284000000000002,\n            \"p98\": 27.284000000000002,\n            \"p99\": 27.284000000000002,\n            \"p999\": 27.284000000000002,\n            \"stddev\": 0,\n            \"m15_rate\": 0.0010194371798584528,\n            \"m1_rate\": 0.004581531748892666,\n            \"m5_rate\": 0.0025744889413512346,\n            \"mean_rate\": 0.00819771418125697,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.head-requests\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.move-requests\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.options-requests\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.other-requests\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.post-requests\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.put-requests\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.requests\": {\n            \"count\": 1,\n            \"max\": 27.284000000000002,\n            \"mean\": 27.284000000000002,\n            \"min\": 27.284000000000002,\n            \"p50\": 27.284000000000002,\n            \"p75\": 27.284000000000002,\n            \"p95\": 27.284000000000002,\n            \"p98\": 27.284000000000002,\n            \"p99\": 27.284000000000002,\n            \"p999\": 27.284000000000002,\n            \"stddev\": 0,\n            \"m15_rate\": 0.0010194371798584528,\n            \"m1_rate\": 0.004581531748892666,\n            \"m5_rate\": 0.0025744889413512346,\n            \"mean_rate\": 0.008197679507659747,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"io.dropwizard.jetty.MutableServletContextHandler.trace-requests\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.apache.hc.client5.http.classic.HttpClient.true-application.get-requests\": {\n            \"count\": 1,\n            \"max\": 0.32539041700000004,\n            \"mean\": 0.32539041700000004,\n            \"min\": 0.32539041700000004,\n            \"p50\": 0.32539041700000004,\n            \"p75\": 0.32539041700000004,\n            \"p95\": 0.32539041700000004,\n            \"p98\": 0.32539041700000004,\n            \"p99\": 0.32539041700000004,\n            \"p999\": 0.32539041700000004,\n            \"stddev\": 0,\n            \"m15_rate\": 0.18503399940684034,\n            \"m1_rate\": 0.06228064478291957,\n            \"m5_rate\": 0.15837791326735634,\n            \"mean_rate\": 0.012762958199153362,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.EmployeeResource.getEmployees\": {\n            \"count\": 1,\n            \"max\": 1.382116208,\n            \"mean\": 1.382116208,\n            \"min\": 1.382116208,\n            \"p50\": 1.382116208,\n            \"p75\": 1.382116208,\n            \"p95\": 1.382116208,\n            \"p98\": 1.382116208,\n            \"p99\": 1.382116208,\n            \"p999\": 1.382116208,\n            \"stddev\": 0,\n            \"m15_rate\": 0.0010194371798584528,\n            \"m1_rate\": 0.004581531748892666,\n            \"m5_rate\": 0.0025744889413512346,\n            \"mean_rate\": 0.008197584124002788,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.EmployeeResource.getEmployees.request.filtering\": {\n            \"count\": 1,\n            \"max\": 25.864870792,\n            \"mean\": 25.864870792,\n            \"min\": 25.864870792,\n            \"p50\": 25.864870792,\n            \"p75\": 25.864870792,\n            \"p95\": 25.864870792,\n            \"p98\": 25.864870792,\n            \"p99\": 25.864870792,\n            \"p999\": 25.864870792,\n            \"stddev\": 0,\n            \"m15_rate\": 0.0010194371798584528,\n            \"m1_rate\": 0.004581531748892666,\n            \"m5_rate\": 0.0025744889413512346,\n            \"mean_rate\": 0.00819758134916541,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.EmployeeResource.getEmployees.response.filtering\": {\n            \"count\": 1,\n            \"max\": 0.000043708,\n            \"mean\": 0.000043708,\n            \"min\": 0.000043708,\n            \"p50\": 0.000043708,\n            \"p75\": 0.000043708,\n            \"p95\": 0.000043708,\n            \"p98\": 0.000043708,\n            \"p99\": 0.000043708,\n            \"p999\": 0.000043708,\n            \"stddev\": 0,\n            \"m15_rate\": 0.0010194371798584528,\n            \"m1_rate\": 0.004581531748892666,\n            \"m5_rate\": 0.0025744889413512346,\n            \"mean_rate\": 0.008197577160368761,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.EmployeeResource.getEmployees.total\": {\n            \"count\": 1,\n            \"max\": 27.268754375,\n            \"mean\": 27.268754375,\n            \"min\": 27.268754375,\n            \"p50\": 27.268754375,\n            \"p75\": 27.268754375,\n            \"p95\": 27.268754375,\n            \"p98\": 27.268754375,\n            \"p99\": 27.268754375,\n            \"p999\": 27.268754375,\n            \"stddev\": 0,\n            \"m15_rate\": 0.0010194371798584528,\n            \"m1_rate\": 0.004581531748892666,\n            \"m5_rate\": 0.0025744889413512346,\n            \"mean_rate\": 0.008197574503136493,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.HelloWorldResource.sayHello\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.HelloWorldResource.sayHello.request.filtering\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.HelloWorldResource.sayHello.response.filtering\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.HelloWorldResource.sayHello.total\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.addUser\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.addUser.request.filtering\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.addUser.response.filtering\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.addUser.total\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.deleteUser\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.deleteUser.request.filtering\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.deleteUser.response.filtering\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.deleteUser.total\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.findUser\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.findUser.request.filtering\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.findUser.response.filtering\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.findUser.total\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.getAllUsers\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.getAllUsers.request.filtering\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.getAllUsers.response.filtering\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.getAllUsers.total\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.updateUser\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.updateUser.request.filtering\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.updateUser.response.filtering\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.UserResource.updateUser.total\": {\n            \"count\": 0,\n            \"max\": 0,\n            \"mean\": 0,\n            \"min\": 0,\n            \"p50\": 0,\n            \"p75\": 0,\n            \"p95\": 0,\n            \"p98\": 0,\n            \"p99\": 0,\n            \"p999\": 0,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.filter.AuthenticationFilter.gets\": {\n            \"count\": 1,\n            \"max\": 0.25039500000000003,\n            \"mean\": 0.25039500000000003,\n            \"min\": 0.25039500000000003,\n            \"p50\": 0.25039500000000003,\n            \"p75\": 0.25039500000000003,\n            \"p95\": 0.25039500000000003,\n            \"p98\": 0.25039500000000003,\n            \"p99\": 0.25039500000000003,\n            \"p999\": 0.25039500000000003,\n            \"stddev\": 0,\n            \"m15_rate\": 0.0009915091652691948,\n            \"m1_rate\": 0.0030203318774233434,\n            \"m5_rate\": 0.0023686441710151626,\n            \"mean_rate\": 0.008166987985919655,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.asr.experiments.resources.filter.AuthorizationFilter.gets\": {\n            \"count\": 1,\n            \"max\": 25.606727333000002,\n            \"mean\": 25.606727333000002,\n            \"min\": 25.606727333000002,\n            \"p50\": 25.606727333000002,\n            \"p75\": 25.606727333000002,\n            \"p95\": 25.606727333000002,\n            \"p98\": 25.606727333000002,\n            \"p99\": 25.606727333000002,\n            \"p999\": 25.606727333000002,\n            \"stddev\": 0,\n            \"m15_rate\": 0.0010194371798584528,\n            \"m1_rate\": 0.004581531748892666,\n            \"m5_rate\": 0.0025744889413512346,\n            \"mean_rate\": 0.008167928084554204,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.eclipse.jetty.server.HttpConnectionFactory.8080.connections\": {\n            \"count\": 2,\n            \"max\": 57.307880375,\n            \"mean\": 40.2095150622085,\n            \"min\": 0.004856916,\n            \"p50\": 57.307880375,\n            \"p75\": 57.307880375,\n            \"p95\": 57.307880375,\n            \"p98\": 57.307880375,\n            \"p99\": 57.307880375,\n            \"p999\": 57.307880375,\n            \"stddev\": 26.21896131161133,\n            \"m15_rate\": 0.0020455002840589088,\n            \"m1_rate\": 0.010574000724210638,\n            \"m5_rate\": 0.00521389447790391,\n            \"mean_rate\": 0.016356760052297234,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        },\n        \"org.eclipse.jetty.server.HttpConnectionFactory.8081.connections\": {\n            \"count\": 1,\n            \"max\": 0.0005445410000000001,\n            \"mean\": 0.0005445410000000001,\n            \"min\": 0.0005445410000000001,\n            \"p50\": 0.0005445410000000001,\n            \"p75\": 0.0005445410000000001,\n            \"p95\": 0.0005445410000000001,\n            \"p98\": 0.0005445410000000001,\n            \"p99\": 0.0005445410000000001,\n            \"p999\": 0.0005445410000000001,\n            \"stddev\": 0,\n            \"m15_rate\": 0,\n            \"m1_rate\": 0,\n            \"m5_rate\": 0,\n            \"mean_rate\": 0.008178708669311065,\n            \"duration_units\": \"seconds\",\n            \"rate_units\": \"calls/second\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Ping",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/ping",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"ping"
							]
						},
						"description": "### Ping Endpoint\n\nThis endpoint sends an HTTP GET request to `http://localhost:8081/ping` to check the availability of the server.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response Body\n\nThe response returns a status code of 200 and a content type of `text/plain`. The body of the response contains the message \"pong\", indicating that the server is available."
					},
					"response": [
						{
							"name": "Pong",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/ping",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"ping"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 29 Jun 2024 12:28:42 GMT"
								},
								{
									"key": "Cache-Control",
									"value": "must-revalidate,no-cache,no-store"
								},
								{
									"key": "Content-Type",
									"value": "text/plain;charset=iso-8859-1"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Length",
									"value": "5"
								}
							],
							"cookie": [],
							"body": "pong\n"
						}
					]
				}
			],
			"description": "This folder consists of all APIs provided by Dropwizard framework as a out-of-the-box functionality.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "App",
			"item": [
				{
					"name": "User",
					"item": [
						{
							"name": "Get all users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/user",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"user"
									]
								},
								"description": "\n### Get User Details\n\nThis endpoint makes an HTTP GET request to localhost:8080/user to retrieve user details.\n\n#### Request Body\nThis request does not require a request body.\n\n#### Response\nThe response will contain an array of user objects, each including the following fields:\n- `id` (number): The unique identifier for the user.\n- `name` (string): The name of the user.\n- `email` (string): The email address of the user.\n- `password` (string): The password of the user.\n- `role` (string): The role of the user.\n\nExample response:\n```json\n[\n    {\n        \"id\": 0,\n        \"name\": \"\",\n        \"email\": \"\",\n        \"password\": \"\",\n        \"role\": \"\"\n    }\n]\n```\n"
							},
							"response": [
								{
									"name": "All users",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:8080/user",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"user"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 29 Jun 2024 12:07:09 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-Powered-By",
											"value": "Dropwizard"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "236"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": -47,\n        \"name\": \"Arvind\",\n        \"email\": \"asr@yopmail.com\",\n        \"password\": \"123\",\n        \"role\": \"USER\"\n    },\n    {\n        \"id\": -45,\n        \"name\": \"Vikash\",\n        \"email\": \"vik@yopmail.com\",\n        \"password\": \"456\",\n        \"role\": \"USER\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Nitesh\",\n        \"email\": \"nit@yopmail.com\",\n        \"password\": \"789\",\n        \"role\": \"USER\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Shashwat\",\n        \"email\": \"sas@yopmail.com\",\n        \"password\": \"910\",\n        \"role\": \"USER\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Shivam\",\n        \"email\": \"shiv@yopmail.com\",\n        \"password\": \"345\",\n        \"role\": \"USER\"\n    },\n    {\n        \"id\": 6,\n        \"name\": \"username\",\n        \"email\": \"username@test.com\",\n        \"password\": \"password\",\n        \"role\": \"ADMIN\"\n    },\n    {\n        \"id\": 8,\n        \"name\": \"user2\",\n        \"email\": \"user2@test.com\",\n        \"password\": \"password2\",\n        \"role\": \"USER\"\n    },\n    {\n        \"id\": 9,\n        \"name\": \"user3\",\n        \"email\": \"user3@test.com\",\n        \"password\": \"password3\",\n        \"role\": \"USER\"\n    },\n    {\n        \"id\": 11,\n        \"name\": \"user4\",\n        \"email\": \"user4@test.com\",\n        \"password\": \"password4\",\n        \"role\": \"USER\"\n    }\n]"
								},
								{
									"name": "First user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:8080/user",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"user"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 29 Jun 2024 12:10:55 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-Powered-By",
											"value": "Dropwizard"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Length",
											"value": "94"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": 13,\n        \"name\": \"username\",\n        \"email\": \"username@test.com\",\n        \"password\": \"password\",\n        \"role\": \"ADMIN\"\n    }\n]"
								},
								{
									"name": "First 2 users",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:8080/user",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"user"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 29 Jun 2024 12:12:25 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-Powered-By",
											"value": "Dropwizard"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Length",
											"value": "178"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": 13,\n        \"name\": \"username\",\n        \"email\": \"username@test.com\",\n        \"password\": \"password\",\n        \"role\": \"ADMIN\"\n    },\n    {\n        \"id\": 15,\n        \"name\": \"user\",\n        \"email\": \"user@test.com\",\n        \"password\": \"password\",\n        \"role\": \"USER\"\n    }\n]"
								}
							]
						},
						{
							"name": "Create user",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"user\",\n    \"email\": \"user@test.com\",\n    \"password\": \"password\",\n    \"role\": \"USER\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/user",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"user"
									]
								},
								"description": "# User Endpoint\n\nThis endpoint allows you to create a new user.\n\n## Request Body\n\n- `name` (string, required): The name of the user.\n    \n- `email` (string, required): The email address of the user.\n    \n- `password` (string, required): The password for the user account.\n    \n- `role` (string, optional): The role of the user. Default: **USER**\n    \n\n## Response\n\nThe response is a JSON object with the following properties:\n\n- `id` (number): The unique identifier for the user.\n    \n- `name` (string): The name of the user.\n    \n- `email` (string): The email address of the user.\n    \n- `password` (string): The password for the user account.\n    \n- `role` (string): The role of the user.\n    \n\n## JSON Schema for Response\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"number\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"email\": {\n            \"type\": \"string\"\n        },\n        \"password\": {\n            \"type\": \"string\"\n        },\n        \"role\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
							},
							"response": [
								{
									"name": "Sample User",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"user\",\n    \"email\": \"user@test.com\",\n    \"password\": \"password\",\n    \"role\": \"USER\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/user",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"user"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 29 Jun 2024 12:12:07 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-Powered-By",
											"value": "Dropwizard"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Length",
											"value": "83"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 15,\n    \"name\": \"user\",\n    \"email\": \"user@test.com\",\n    \"password\": \"password\",\n    \"role\": \"USER\"\n}"
								}
							]
						},
						{
							"name": "Get user by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/user/:userId",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "15"
										}
									]
								},
								"description": "\nThis endpoint retrieves user information based on the provided userId. The response will be in JSON format and will include the user's id, name, email, password, and role.\n\n### Authentication\nThis request requires authentication to access user-specific information. The user making the request must be authenticated and authorized to view the user details.\n\n"
							},
							"response": [
								{
									"name": "Sample user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:8080/user/:userId",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"user",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "15"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 29 Jun 2024 12:16:47 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-Powered-By",
											"value": "Dropwizard"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Length",
											"value": "83"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 15,\n    \"name\": \"user\",\n    \"email\": \"user@test.com\",\n    \"password\": \"password\",\n    \"role\": \"USER\"\n}"
								}
							]
						},
						{
							"name": "Update user by ID",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 15,\n    \"name\": \"sample_user\",\n    \"email\": \"user@test.com\",\n    \"password\": \"password\",\n    \"role\": \"USER\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/user/:userId",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "15"
										}
									]
								},
								"description": "\n### Update User Details\n---\nThis endpoint allows the client to update user details by sending an HTTP PUT request to localhost:8080/user/:userId.\n\n#### Request Body\n- id (number): The unique identifier of the user.\n- name (string): The name of the user.\n- email (string): The email address of the user.\n- password (string): The password of the user.\n- role (string): The role of the user.\n\n#### Response\nThe response will be in JSON format with the following schema:\n```json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"number\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"email\": {\n            \"type\": \"string\"\n        },\n        \"password\": {\n            \"type\": \"string\"\n        },\n        \"role\": {\n            \"type\": \"string\"\n        }\n    }\n}\n```\nAn example response for this request is:\n```json\n{\n    \"id\": 0,\n    \"name\": \"\",\n    \"email\": \"\",\n    \"password\": \"\",\n    \"role\": \"\"\n}\n```\n"
							},
							"response": [
								{
									"name": "Sample Update",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": 15,\n    \"name\": \"sample_user\",\n    \"email\": \"user@test.com\",\n    \"password\": \"password\",\n    \"role\": \"USER\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/user/:userId",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"user",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "13"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 29 Jun 2024 12:17:43 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-Powered-By",
											"value": "Dropwizard"
										},
										{
											"key": "Content-Length",
											"value": "91"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 13,\n    \"name\": \"sample_user\",\n    \"email\": \"user@test.com\",\n    \"password\": \"password\",\n    \"role\": \"ADMIN\"\n}"
								}
							]
						},
						{
							"name": "Delete user by ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:8080/user/:userId",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "16"
										}
									]
								},
								"description": "### Delete User\n\nThis endpoint is used to delete a user with the specified user ID.\n\n#### Request Body\n\nThis endpoint does not require a request body.\n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\nExample Response Body:\n\n``` json\n{\n    \"id\": 0,\n    \"name\": \"\",\n    \"email\": \"\",\n    \"password\": \"\",\n    \"role\": \"\"\n}\n\n ```"
							},
							"response": [
								{
									"name": "Sample response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "localhost:8080/user/:userId",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"user",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "16"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 29 Jun 2024 12:18:42 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-Powered-By",
											"value": "Dropwizard"
										},
										{
											"key": "Content-Length",
											"value": "87"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 16,\n    \"name\": \"user2\",\n    \"email\": \"user2@2test.com\",\n    \"password\": \"password2\",\n    \"role\": \"USER\"\n}"
								}
							]
						}
					],
					"description": "This folder has the APIs that interacts with Postgres Database using the App. It will actually uses the content from Database for request and responses."
				},
				{
					"name": "Employee",
					"item": [
						{
							"name": "Get all Employees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/employee",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"employee"
									]
								},
								"description": "# Employee Details\n\nThis endpoint retrieves the details of employees.\n\n## Request\n\n- Method: `GET`\n    \n- Endpoint: `localhost:8080/employee`\n    \n\n## Response\n\nThe response will be a JSON array containing the details of the employees. Here is an example of the response schema:\n\n``` json\n[\n  {\n    \"id\": 0,\n    \"name\": \"\",\n    \"username\": \"\",\n    \"email\": \"\",\n    \"address\": {\n      \"street\": \"\",\n      \"suite\": \"\",\n      \"city\": \"\",\n      \"zipcode\": \"\",\n      \"geo\": {\n        \"lat\": \"\",\n        \"lng\": \"\"\n      }\n    },\n    \"phone\": \"\",\n    \"website\": \"\",\n    \"company\": {\n      \"name\": \"\",\n      \"catchPhrase\": \"\",\n      \"bs\": \"\"\n    }\n  }\n]\n\n ```"
							},
							"response": [
								{
									"name": "Sample employee details",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:8080/employee",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"employee"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 29 Jun 2024 12:26:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-Powered-By",
											"value": "Dropwizard"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "1847"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Leanne Graham\",\n        \"username\": \"Bret\",\n        \"email\": \"Sincere@april.biz\",\n        \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n                \"lat\": \"-37.3159\",\n                \"lng\": \"81.1496\"\n            }\n        },\n        \"phone\": \"1-770-736-8031 x56442\",\n        \"website\": \"hildegard.org\",\n        \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n        }\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Ervin Howell\",\n        \"username\": \"Antonette\",\n        \"email\": \"Shanna@melissa.tv\",\n        \"address\": {\n            \"street\": \"Victor Plains\",\n            \"suite\": \"Suite 879\",\n            \"city\": \"Wisokyburgh\",\n            \"zipcode\": \"90566-7771\",\n            \"geo\": {\n                \"lat\": \"-43.9509\",\n                \"lng\": \"-34.4618\"\n            }\n        },\n        \"phone\": \"010-692-6593 x09125\",\n        \"website\": \"anastasia.net\",\n        \"company\": {\n            \"name\": \"Deckow-Crist\",\n            \"catchPhrase\": \"Proactive didactic contingency\",\n            \"bs\": \"synergize scalable supply-chains\"\n        }\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Clementine Bauch\",\n        \"username\": \"Samantha\",\n        \"email\": \"Nathan@yesenia.net\",\n        \"address\": {\n            \"street\": \"Douglas Extension\",\n            \"suite\": \"Suite 847\",\n            \"city\": \"McKenziehaven\",\n            \"zipcode\": \"59590-4157\",\n            \"geo\": {\n                \"lat\": \"-68.6102\",\n                \"lng\": \"-47.0653\"\n            }\n        },\n        \"phone\": \"1-463-123-4447\",\n        \"website\": \"ramiro.info\",\n        \"company\": {\n            \"name\": \"Romaguera-Jacobson\",\n            \"catchPhrase\": \"Face to face bifurcated interface\",\n            \"bs\": \"e-enable strategic applications\"\n        }\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Patricia Lebsack\",\n        \"username\": \"Karianne\",\n        \"email\": \"Julianne.OConner@kory.org\",\n        \"address\": {\n            \"street\": \"Hoeger Mall\",\n            \"suite\": \"Apt. 692\",\n            \"city\": \"South Elvis\",\n            \"zipcode\": \"53919-4257\",\n            \"geo\": {\n                \"lat\": \"29.4572\",\n                \"lng\": \"-164.2990\"\n            }\n        },\n        \"phone\": \"493-170-9623 x156\",\n        \"website\": \"kale.biz\",\n        \"company\": {\n            \"name\": \"Robel-Corkery\",\n            \"catchPhrase\": \"Multi-tiered zero tolerance productivity\",\n            \"bs\": \"transition cutting-edge web services\"\n        }\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Chelsey Dietrich\",\n        \"username\": \"Kamren\",\n        \"email\": \"Lucio_Hettinger@annie.ca\",\n        \"address\": {\n            \"street\": \"Skiles Walks\",\n            \"suite\": \"Suite 351\",\n            \"city\": \"Roscoeview\",\n            \"zipcode\": \"33263\",\n            \"geo\": {\n                \"lat\": \"-31.8129\",\n                \"lng\": \"62.5342\"\n            }\n        },\n        \"phone\": \"(254)954-1289\",\n        \"website\": \"demarco.info\",\n        \"company\": {\n            \"name\": \"Keebler LLC\",\n            \"catchPhrase\": \"User-centric fault-tolerant solution\",\n            \"bs\": \"revolutionize end-to-end systems\"\n        }\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Mrs. Dennis Schulist\",\n        \"username\": \"Leopoldo_Corkery\",\n        \"email\": \"Karley_Dach@jasper.info\",\n        \"address\": {\n            \"street\": \"Norberto Crossing\",\n            \"suite\": \"Apt. 950\",\n            \"city\": \"South Christy\",\n            \"zipcode\": \"23505-1337\",\n            \"geo\": {\n                \"lat\": \"-71.4197\",\n                \"lng\": \"71.7478\"\n            }\n        },\n        \"phone\": \"1-477-935-8478 x6430\",\n        \"website\": \"ola.org\",\n        \"company\": {\n            \"name\": \"Considine-Lockman\",\n            \"catchPhrase\": \"Synchronised bottom-line interface\",\n            \"bs\": \"e-enable innovative applications\"\n        }\n    },\n    {\n        \"id\": 7,\n        \"name\": \"Kurtis Weissnat\",\n        \"username\": \"Elwyn.Skiles\",\n        \"email\": \"Telly.Hoeger@billy.biz\",\n        \"address\": {\n            \"street\": \"Rex Trail\",\n            \"suite\": \"Suite 280\",\n            \"city\": \"Howemouth\",\n            \"zipcode\": \"58804-1099\",\n            \"geo\": {\n                \"lat\": \"24.8918\",\n                \"lng\": \"21.8984\"\n            }\n        },\n        \"phone\": \"210.067.6132\",\n        \"website\": \"elvis.io\",\n        \"company\": {\n            \"name\": \"Johns Group\",\n            \"catchPhrase\": \"Configurable multimedia task-force\",\n            \"bs\": \"generate enterprise e-tailers\"\n        }\n    },\n    {\n        \"id\": 8,\n        \"name\": \"Nicholas Runolfsdottir V\",\n        \"username\": \"Maxime_Nienow\",\n        \"email\": \"Sherwood@rosamond.me\",\n        \"address\": {\n            \"street\": \"Ellsworth Summit\",\n            \"suite\": \"Suite 729\",\n            \"city\": \"Aliyaview\",\n            \"zipcode\": \"45169\",\n            \"geo\": {\n                \"lat\": \"-14.3990\",\n                \"lng\": \"-120.7677\"\n            }\n        },\n        \"phone\": \"586.493.6943 x140\",\n        \"website\": \"jacynthe.com\",\n        \"company\": {\n            \"name\": \"Abernathy Group\",\n            \"catchPhrase\": \"Implemented secondary concept\",\n            \"bs\": \"e-enable extensible e-tailers\"\n        }\n    },\n    {\n        \"id\": 9,\n        \"name\": \"Glenna Reichert\",\n        \"username\": \"Delphine\",\n        \"email\": \"Chaim_McDermott@dana.io\",\n        \"address\": {\n            \"street\": \"Dayna Park\",\n            \"suite\": \"Suite 449\",\n            \"city\": \"Bartholomebury\",\n            \"zipcode\": \"76495-3109\",\n            \"geo\": {\n                \"lat\": \"24.6463\",\n                \"lng\": \"-168.8889\"\n            }\n        },\n        \"phone\": \"(775)976-6794 x41206\",\n        \"website\": \"conrad.com\",\n        \"company\": {\n            \"name\": \"Yost and Sons\",\n            \"catchPhrase\": \"Switchable contextually-based project\",\n            \"bs\": \"aggregate real-time technologies\"\n        }\n    },\n    {\n        \"id\": 10,\n        \"name\": \"Clementina DuBuque\",\n        \"username\": \"Moriah.Stanton\",\n        \"email\": \"Rey.Padberg@karina.biz\",\n        \"address\": {\n            \"street\": \"Kattie Turnpike\",\n            \"suite\": \"Suite 198\",\n            \"city\": \"Lebsackbury\",\n            \"zipcode\": \"31428-2261\",\n            \"geo\": {\n                \"lat\": \"-38.2386\",\n                \"lng\": \"57.2232\"\n            }\n        },\n        \"phone\": \"024-648-3804\",\n        \"website\": \"ambrose.net\",\n        \"company\": {\n            \"name\": \"Hoeger LLC\",\n            \"catchPhrase\": \"Centralized empowering task-force\",\n            \"bs\": \"target end-to-end models\"\n        }\n    }\n]"
								}
							]
						}
					],
					"description": "This folder consists of APIs which uses Downstream Http API for this app's responses.\n\nArchitecture is `Postman (Client)` -> `App` -> `Downstream Http API`"
				},
				{
					"name": "Hello world",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/hello-world?name={{$randomFirstName}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hello-world"
							],
							"query": [
								{
									"key": "name",
									"value": "{{$randomFirstName}}"
								}
							]
						},
						"description": "### Get Hello World\n\nThis endpoint sends an HTTP GET request to retrieve a hello world message with the provided name.\n\n#### Request Parameters\n\n- `name` (query parameter, required): The name for which the hello world message is requested.\n    \n\n#### Response\n\n- `id` (number): The identifier for the hello world message.\n    \n- `content` (string): The hello world message content.\n    \n\n#### Example\n\nRequest:\n\n```\nGET http://localhost:8080/hello-world?name=John\n\n ```\n\nResponse:\n\n``` json\n{\n    \"id\": 1,\n    \"content\": \"Hello, Stranger!\"\n}\n\n ```"
					},
					"response": [
						{
							"name": "Sample Stranger Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/hello-world",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"hello-world"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 29 Jun 2024 11:59:28 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Powered-By",
									"value": "Dropwizard"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Length",
									"value": "37"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"content\": \"Hello, Stranger!\"\n}"
						},
						{
							"name": "Sample Named response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/hello-world?name={{$randomFirstName}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"hello-world"
									],
									"query": [
										{
											"key": "name",
											"value": "{{$randomFirstName}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 29 Jun 2024 12:01:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Powered-By",
									"value": "Dropwizard"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Length",
									"value": "36"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"content\": \"Hello, Rhianna!\"\n}"
						}
					]
				}
			],
			"description": "This folder consists of APIs built in App and it uses Authentication to connect.\n\nThis folder automatically adds a random `X-Idempotency-Token` before each request is made and also inherits authentication credentials from Folder.",
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "{{.PASSWORD}}",
						"type": "string"
					},
					{
						"key": "username",
						"value": "{{.USERNAME}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"pm.request.headers.add({key: 'X-Idempotency-Token', value: '{{$guid}}'});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}